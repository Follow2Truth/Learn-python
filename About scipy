Scipy由不同科学计算领域的子模块组成：cluster(聚类算法),constants(物理数学常数),fftpack(快速傅里叶转换), integrate(积分和常微分方程求解), 
interpolate(插值), io(输入输出), linalg(线性代数), odr(正交距离回归), optimize(优化和求根), signal(信号处理), sparse(稀疏矩阵)
spatial(空间数据结构与算法), special(特殊方程), stats(统计分布和函数), weave(C/C++积分).

np.info(函数)用于查看函数的文档，np.lookfor("",module='')用于查找某个module里面包含关键词的函数。

插值： interp1d---默认是线性插值，通过kind参数来调节使用的插值方法，nearest-最近邻插值，zero-0阶插值，linear-线性插值,quadratic-二次插值，cubic-三次
插值。 径向基函数（Radial basis function）插值（Rbf）-----通过改变function来调节插值方法，multiquadric， gaussian, inverse_multiquadric.
不同的Rbf结果不同。Rbf(x,y,z)还可以进行三维插值。

统计： Numpy自带一些统计的方法--min,max,mean,std.此外，scipy的stats模块也有关于统计上的知识---nanmedian()，mode()，skew(),kurtosis().scipy中有很多
stats的分布，包括均匀分布，正态分布，学生t分布，F分布，Gamma分布，伯努利分布，几何分布等。 关于正太分布，四类常用的函数--norm.cdf,norm.pdf, norm.rvs
,norm.fit。from scipy.integrate import trapz可以导入积分函数。此外，关于离散分布，from scipy.stats import binom, poisson, randint.
假设检验：导入相关的函数--正态分布，独立双样本t检验，配对样本t检验，单样本t检验，学生t分布。

拟合：from numpy import polyfit,poly1d-- 多项式拟合函数，可以改变阶数。 scipy.linalg.lstsq--用来求出最小二乘解。scipy.stats.linregress线性回归，
也是用来线性拟合的函数。from scipy.optimize import leastsq--更高级的拟合,可以自己定义一个用来拟合的函数以及误差函数 scipy.optimize.curvefit--不需
要定义误差函数，直接传入自己定义的function作为参数。

优化：scipy.optimize.minimize--接受三个参数：第一个是要优化的函数，第二个是初始猜测值，第三个则是优化函数的附加参数，
默认 minimize 将优化函数的第一个参数作为优化变量，所以第三个参数输入的附加参数从优化函数的第二个参数开始。minimize可以利用
'BFGS', 'L-BFGS-B', 'SLSQP','nelder-mead','powell' 中的一种算法。默认是BFGS. rosenbrock--是一个用来测试优化函数效果的一个非凸函数。

符号积分：先导入init_printing模块方便显示，利用sympy.symbols来定义符号变量，再用sympy定义表达式，然后可以直接对表达式积分sympy.integrate。
数值积分：1. from scipy.integrate import quad, 可以在某一区间积分，也可以积分到无穷。2. 双重积分则需要调用quad函数两次。2. 利用
scipy.integrate.trapz或者simps进行采样点积分。

解微分方程：1.积分求解 from scipy.integrate import odeint. 先定义函数，然后积分求解。2. 高阶微分方程得利用降阶求解。

稀疏矩阵：scipy.sparse. 有各种各样的类型，coo_matrix--a sparse matrix in coordinate format. csc_matrix--compressed sparse column matrix

线性代数： scipy.linalg. 一般用numpy.ndarray来表示矩阵。然后：linalg.inv()可以用来求逆。 linalg.solve()用来解方程组，linalg.det()求解行列式， 
linalg.norm()可以用来计算矩阵或者向量的模， linalg.eig()用来计算矩阵的特征向量和特征值，linalg.lu()对矩阵进行LU分解,linalg.cholesky()cholesky
分解， 

